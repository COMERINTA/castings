package poo;

import java.sql.SQLOutput;
import java.util.*;

public class Uso_Empleado {
    public static void main(String[] args) {

        /*Empleado empleado1 = new Empleado("Paco Gómez", 85000, 1990,12,17);
        Empleado empleado2 = new Empleado("Ana López", 95000, 1995,06,02);
        Empleado empleado3 = new Empleado("María Martín", 105000, 2002,03,15);

        empleado1.subeSueldo(5);
        empleado2.subeSueldo(5);
        empleado3.subeSueldo(5);

        System.out.println("Nombre :" + empleado1.dame_nombre() + " Sueldo: " + empleado1.dame_sueldo() +
                " Fecha de Alta " + empleado1.dame_fechaContrato());
        System.out.println("Nombre :" + empleado2.dame_nombre() + " Sueldo: " + empleado2.dame_sueldo() +
                " Fecha de Alta " + empleado2.dame_fechaContrato());
        System.out.println("Nombre :" + empleado3.dame_nombre() + " Sueldo: " + empleado3.dame_sueldo() +
                " Fecha de Alta " + empleado3.dame_fechaContrato());*/

        Jefatura jefe_RRHH = new Jefatura("Juan", 55000, 2006,9,25);
        jefe_RRHH.estableceIncentivo(2570);

        Empleado[] misEmpleados = new Empleado[6];

        misEmpleados[0]= new Empleado("Paco", 85000,1990,12,17);
        misEmpleados[1]= new Empleado("Ana", 95000,1995,06,02);
        misEmpleados[2]= new Empleado("Maria", 105000,2002,03,15);
        misEmpleados[3]= new Empleado("Antonio");
        misEmpleados[4]= jefe_RRHH;    // ESTO ES POLIMORFISMO, EL PRINCIPIO DE SUSITTUCION <---- OJO !!!
        misEmpleados[5]= new Jefatura("María", 95000, 1999,5,26);

        Jefatura jefaFinanzas = (Jefatura) misEmpleados[5];
        jefaFinanzas.estableceIncentivo(55000);    // ALGUIEN SABE POR QUE NO ME SUMA ESTE INCENTIVOS ---------------<<<<<<<<<<>>>>>>>>>>------------
       
        for (Empleado e: misEmpleados){    // HACE LO MISMO QUE EL FOR DE ARRIBA
            e.subeSueldo(5);
        }
        for (Empleado e: misEmpleados){
            System.out.println("Nombre :" + e.dame_nombre() +
                    " Sueldo: " + e.dame_sueldo() +
                    " Fecha de Alta: " + e.dame_fechaContrato());
        }
    }
}
class Empleado{

    public Empleado(String nom, double sue, int agno, int mes, int dia){   //OJO A LA { FINAL

        nombre = nom;
        sueldo = sue;
        GregorianCalendar calendario = new GregorianCalendar(agno, mes-1, dia);
        altaContrato = calendario.getTime();  //ESTO ES PARA MOSTRAR FECHA

        ++IdSiguiente;
        Id = IdSiguiente;
    }

    public Empleado(String nom){

        this(nom,30000, 2000,01,01); // DEFINE DATOS DIRECTAMENTE EN LA CLASE.
    }

    public String dame_nombre(){    // GETTER
        return  nombre;
    }
    public double dame_sueldo(){    //  GETTER
        return sueldo;
    }
    public Date dame_fechaContrato(){    //GETTER
        return altaContrato;
    }
    public void subeSueldo(double porcentaje){          // SETTER

        double  aumento = sueldo * porcentaje/100;
        sueldo+=aumento;        //  sueldo = sueldo + sueldo*aumento
    }


    private String nombre;
    private double sueldo;
    private Date altaContrato;
    private static int IdSiguiente;
    private int Id;
}

class Jefatura extends Empleado {

    public Jefatura(String nom, double sue, int agno, int mes, int dia) {

        super(nom, sue, agno, mes, dia);

    }

    public void estableceIncentivo (double b){

        incentivo = b;
    }

    public double dameSueldo(){

        double sueldoJefe = super.dame_sueldo();

        return sueldoJefe + incentivo;
    }

    private double incentivo;


}
